<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lb.sys.dao.IpWhiteListMapper">
	<resultMap id="BaseResultMap" type="com.lb.ip.model.IpWhiteList">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="ipAddress" jdbcType="VARCHAR" property="ipaddress" />
		<result column="inputTime" jdbcType="TIMESTAMP" property="inputtime" />
		<result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<!-- <result column="userId" jdbcType="INTEGER" property="userid" /> -->
	</resultMap>

	<resultMap id="ResultOfInteger" type="java.lang.Integer">
		<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, ipAddress, inputTime, updateTime, status, remark, userId
	</sql>



	<!-- 查询ip白名单是否为启用的状态 -->
	<select id="on_off" resultMap="ResultOfInteger">
		select COUNT(*) as count FROM sys_configure WHERE configure=#{configure}
		AND
		on_off=1
	</select>
	
	<!-- 查询配置信息 -->
	<select id="byConfigure" resultType="map">
	   SELECT * FROM sys_configure WHERE configure=#{configure}
	</select>
	


	<!-- 逻辑删除ip记录 -->
	<update id="deleteIp" parameterType="com.lb.ip.model.IpWhiteList">
		update ip_white_list set status=#{ipWhiteList.status} where
		id=#{ipWhiteList.id}
	</update>

	<!-- <select id="selectByExample" parameterType="com.lb.ip.model.IpWhiteListExample" 
		resultMap="BaseResultMap"> select <if test="distinct"> distinct </if> <include 
		refid="Base_Column_List" /> from ip_white_list <if test="_parameter != null"> 
		<include refid="Example_Where_Clause" /> </if> <if test="orderByClause != 
		null"> order by ${orderByClause} </if> </select> -->

	<select id="selectByExample" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select * from ip_white_list WHERE status=#{status}
	</select>

	<!-- 根据ip查询是否已经存在重复的ip -->
	<select id="selectIpYorN" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*) from ip_white_list where trim(ipAddress)=#{ip} and status=0
	</select>


	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ip_white_list
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from ip_white_list
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.lb.ip.model.IpWhiteListExample">
		delete from ip_white_list
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.lb.ip.model.IpWhiteList">
		insert into ip_white_list (id, ipAddress, inputTime,
		updateTime, status, remark)
		values (#{id,jdbcType=INTEGER}, #{ipaddress,jdbcType=VARCHAR},
		#{inputtime,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.lb.ip.model.IpWhiteList">
		insert into ip_white_list
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="ipaddress != null">
				ipAddress,
			</if>
			<if test="inputtime != null">
				inputTime,
			</if>
			<if test="updatetime != null">
				updateTime,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="userid != null">
				userId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="ipaddress != null">
				#{ipaddress,jdbcType=VARCHAR},
			</if>
			<if test="inputtime != null">
				#{inputtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.lb.ip.model.IpWhiteListExample"
		resultType="java.lang.Long">
		select count(*) from ip_white_list
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>


	<update id="updateByExampleSelective" parameterType="map">
		update ip_white_list
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.ipaddress != null">
				ipAddress = #{record.ipaddress,jdbcType=VARCHAR},
			</if>
			<if test="record.inputtime != null">
				inputTime = #{record.inputtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.userid != null">
				userId = #{record.userid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update ip_white_list
		set id = #{record.id,jdbcType=INTEGER},
		ipAddress = #{record.ipaddress,jdbcType=VARCHAR},
		inputTime = #{record.inputtime,jdbcType=TIMESTAMP},
		updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
		status = #{record.status,jdbcType=INTEGER},
		remark = #{record.remark,jdbcType=VARCHAR},
		userId = #{record.userid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.lb.ip.model.IpWhiteList">
		update ip_white_list
		<set>
			<if test="record.ipaddress != null">
				ipAddress = #{record.ipaddress},
			</if>
			<if test="record.inputtime != null">
				inputTime = #{record.inputtime},
			</if>
			<if test="record.updatetime != null">
				updateTime = #{record.updatetime},
			</if>
			<if test="record.status != null">
				status = #{record.status},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark},
			</if>
		</set>
		where id = #{record.id}
	</update>



	<update id="updateByPrimaryKey" parameterType="com.lb.ip.model.IpWhiteList">
		update ip_white_list
		set ipAddress = #{ipaddress,jdbcType=VARCHAR},
		inputTime = #{inputtime,jdbcType=TIMESTAMP},
		updateTime = #{updatetime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR},
		userId = #{userid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>