<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lb.sys.dao.DepositGivingStrategyMapper">
  <resultMap id="BaseResultMap" type="com.lb.member.model.DepositGivingStrategy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="giving_way" jdbcType="TINYINT" property="givingWay" />
    <result column="recharge_fq" jdbcType="TINYINT" property="rechargeFq" />
    <result column="giving_credits" jdbcType="REAL" property="givingCredits" />
    <result column="giving_proportion" jdbcType="REAL" property="givingProportion" />
    <result column="Giving_ceiling" jdbcType="REAL" property="givingCeiling" />
    <result column="amount_up" jdbcType="REAL" property="amountUp" />
    <result column="amount_down" jdbcType="REAL" property="amountDown" />
    <result column="stream_multiple" jdbcType="REAL" property="streamMultiple" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="created_user" jdbcType="VARCHAR" property="createdUser" />
    <result column="info" jdbcType="VARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    id, giving_way, recharge_fq, giving_credits, giving_proportion, Giving_ceiling, amount_up, 
    amount_down, stream_multiple, state, start_time, end_time, created_date, update_date, 
    update_user, created_user, info
  </sql>
  <select id="selectByExample" parameterType="com.lb.member.model.DepositGivingStrategyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deposit_giving_strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from deposit_giving_strategy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    delete from deposit_giving_strategy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lb.member.model.DepositGivingStrategyExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    delete from deposit_giving_strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lb.member.model.DepositGivingStrategy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    insert into deposit_giving_strategy (id, giving_way, recharge_fq, 
      giving_credits, giving_proportion, Giving_ceiling, 
      amount_up, amount_down, stream_multiple, 
      state, start_time, end_time, 
      created_date, update_date, update_user, 
      created_user, info)
    values (#{id,jdbcType=INTEGER}, #{givingWay,jdbcType=TINYINT}, #{rechargeFq,jdbcType=TINYINT}, 
      #{givingCredits,jdbcType=REAL}, #{givingProportion,jdbcType=REAL}, #{givingCeiling,jdbcType=REAL}, 
      #{amountUp,jdbcType=REAL}, #{amountDown,jdbcType=REAL}, #{streamMultiple,jdbcType=REAL}, 
      #{state,jdbcType=TINYINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{createdUser,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    insert into deposit_giving_strategy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        id,
      </if>
      <if test="givingWay != null and givingWay != ''">
        giving_way,
      </if>
      <if test="rechargeFq != null and rechargeFq != ''">
        recharge_fq,
      </if>
      <if test="givingCredits != null and givingCredits != ''">
        giving_credits,
      </if>
      <if test="givingProportion != null and givingProportion != ''">
        giving_proportion,
      </if>
      <if test="givingCeiling != null and givingCeiling != ''">
        Giving_ceiling,
      </if>
      <if test="amountUp != null and amountUp != ''">
        amount_up,
      </if>
      <if test="amountDown != null and amountDown != ''">
        amount_down,
      </if>
      <if test="streamMultiple != null and streamMultiple != ''">
        stream_multiple,
      </if>
      <if test="state != null and state != ''">
        state,
      </if>
      <if test="startTime != null and startTime != ''">
        start_time,
      </if>
      <if test="endTime != null and endTime != ''">
        end_time,
      </if>
        created_date,
      <if test="updateDate != null and updateDate != ''">
        update_date,
      </if>
      <if test="updateUser != null and updateUser != ''">
        update_user,
      </if>
      <if test="createdUser != null and createdUser != ''">
        created_user,
      </if>
      <if test="info != null and info != ''">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="givingWay != null and givingWay != ''">
        #{givingWay,jdbcType=TINYINT},
      </if>
      <if test="rechargeFq != null and rechargeFq != ''">
        #{rechargeFq,jdbcType=TINYINT},
      </if>
      <if test="givingCredits != null and givingCredits != ''">
        #{givingCredits,jdbcType=REAL},
      </if>
      <if test="givingProportion != null and givingProportion != ''">
        #{givingProportion,jdbcType=REAL},
      </if>
      <if test="givingCeiling != null and givingCeiling != ''">
        #{givingCeiling,jdbcType=REAL},
      </if>
      <if test="amountUp != null and amountUp != ''">
        #{amountUp,jdbcType=REAL},
      </if>
      <if test="amountDown != null and amountDown != ''">
        #{amountDown,jdbcType=REAL},
      </if>
      <if test="streamMultiple != null and streamMultiple != ''">
        #{streamMultiple,jdbcType=REAL},
      </if>
      <if test="state != null and state != ''">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="startTime != null and startTime != ''">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null and endTime != ''">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
        now(),
      <if test="updateDate != null and updateDate != ''">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null and updateUser != ''">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null and createdUser != ''">
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="info != null and info != ''">
        #{info,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lb.member.model.DepositGivingStrategyExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    select count(*) from deposit_giving_strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    update deposit_giving_strategy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.givingWay != null">
        giving_way = #{record.givingWay,jdbcType=TINYINT},
      </if>
      <if test="record.rechargeFq != null">
        recharge_fq = #{record.rechargeFq,jdbcType=TINYINT},
      </if>
      <if test="record.givingCredits != null">
        giving_credits = #{record.givingCredits,jdbcType=REAL},
      </if>
      <if test="record.givingProportion != null">
        giving_proportion = #{record.givingProportion,jdbcType=REAL},
      </if>
      <if test="record.givingCeiling != null">
        Giving_ceiling = #{record.givingCeiling,jdbcType=REAL},
      </if>
      <if test="record.amountUp != null">
        amount_up = #{record.amountUp,jdbcType=REAL},
      </if>
      <if test="record.amountDown != null">
        amount_down = #{record.amountDown,jdbcType=REAL},
      </if>
      <if test="record.streamMultiple != null">
        stream_multiple = #{record.streamMultiple,jdbcType=REAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createdUser != null">
        created_user = #{record.createdUser,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    update deposit_giving_strategy
    set id = #{record.id,jdbcType=INTEGER},
      giving_way = #{record.givingWay,jdbcType=TINYINT},
      recharge_fq = #{record.rechargeFq,jdbcType=TINYINT},
      giving_credits = #{record.givingCredits,jdbcType=REAL},
      giving_proportion = #{record.givingProportion,jdbcType=REAL},
      Giving_ceiling = #{record.givingCeiling,jdbcType=REAL},
      amount_up = #{record.amountUp,jdbcType=REAL},
      amount_down = #{record.amountDown,jdbcType=REAL},
      stream_multiple = #{record.streamMultiple,jdbcType=REAL},
      state = #{record.state,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      created_user = #{record.createdUser,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    update deposit_giving_strategy
    <set>
      <if test="givingWay != null and givingWay != ''">
        giving_way = #{givingWay,jdbcType=TINYINT},
      </if>
      <if test="(rechargeFq != null and rechargeFq != '') or rechargeFq==0 ">
        recharge_fq = #{rechargeFq,jdbcType=TINYINT},
      </if>
      <choose>
      	<when test="givingWay != null and givingWay == 1">
      		giving_credits = #{givingCredits,jdbcType=REAL},
      		giving_proportion = NULL,
      	</when>
      	<when test="givingWay != null and givingWay == 2">
      		giving_credits = NULL,
      		giving_proportion = #{givingProportion,jdbcType=REAL},
      	</when>
      </choose>
      <if test="givingCeiling != null and givingCeiling != ''">
      		Giving_ceiling = #{givingCeiling,jdbcType=REAL},
      </if>
      <if test="(amountUp != null and amountUp != '') or amountUp==0">
      	  amount_up = #{amountUp,jdbcType=REAL},
      </if>
      <if test="(amountDown != null and amountDown != '') or amountDown==0">
      	  amount_down = #{amountDown,jdbcType=REAL},
      </if>
      <if test="streamMultiple != null and streamMultiple != ''">
        stream_multiple = #{streamMultiple,jdbcType=REAL},
      </if>
      <if test="(state != null and state != '') or state==0 ">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="startTime != null and startTime != ''">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null and endTime != ''">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdDate != null and createdDate != ''">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
        update_date = now(),
      <if test="updateUser != null and updateUser != ''">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createdUser != null and createdUser != ''">
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="info != null and info != ''">
        info = #{info,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lb.member.model.DepositGivingStrategy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jan 29 15:14:52 CST 2018.
    -->
    update deposit_giving_strategy
    set giving_way = #{givingWay,jdbcType=TINYINT},
      recharge_fq = #{rechargeFq,jdbcType=TINYINT},
      giving_credits = #{givingCredits,jdbcType=REAL},
      giving_proportion = #{givingProportion,jdbcType=REAL},
      Giving_ceiling = #{givingCeiling,jdbcType=REAL},
      amount_up = #{amountUp,jdbcType=REAL},
      amount_down = #{amountDown,jdbcType=REAL},
      stream_multiple = #{streamMultiple,jdbcType=REAL},
      state = #{state,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      created_user = #{createdUser,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="queryAllDepositGivingStrategy" resultType="map"  >
	SELECT
		d.id,
		d.giving_way AS givingWay,
		d.recharge_fq AS rechargeFq,
		d.giving_credits AS givingCredits,
		d.giving_proportion AS givingProportion,
		d.Giving_ceiling AS GivingCeiling,
		d.stream_multiple AS streamMultiple,
		d.state AS state,
		d.amount_up AS amountUp,
		d.amount_down AS amountDown,
		d.start_time AS startTime,
		d.end_time AS endTime,
		d.CREATED_DATE AS createdDate,
		d.UPDATE_DATE AS updateDate,
		d.UPDATE_USER AS updateUser,
		d.CREATED_USER AS createdUser,
		d.info AS info,
		getItemName("GivingWay",giving_way) AS givingWayName
	FROM
		deposit_giving_strategy AS d   ORDER BY d.state DESC, d.CREATED_DATE DESC
  </select>
  
  <select id="codeInformation" resultType="map" parameterType="map" >
	   SELECT
			c.codeID AS codeID,
			c.itemID AS itemID,
			c.itemName AS itemName
			FROM
			code_library AS c
		WHERE
			c.codeID =#{codeID}
  </select>
</mapper>